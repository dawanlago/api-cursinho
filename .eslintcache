[{"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/index.tsx":"1","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/App.tsx":"2","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/Routes.tsx":"3","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/contexts/index.ts":"4","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/styles/themes/default.ts":"5","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/contexts/Store.tsx":"6","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/PrivateRoute/index.tsx":"7","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Login/index.tsx":"8","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/TokenMigration/index.tsx":"9","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Home/index.tsx":"10","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/index.tsx":"11","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/index.tsx":"12","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/index.tsx":"13","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/index.tsx":"14","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/index.tsx":"15","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/index.tsx":"16","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/index.tsx":"17","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/index.tsx":"18","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/index.tsx":"19","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/TokenMigration/styles.ts":"20","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/styles.ts":"21","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/styles.ts":"22","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/constants.ts":"23","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/note-html.ts":"24","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/styles.ts":"25","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/service-ms-intranet.ts":"26","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/get-account-validation-list-api.ts":"27","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/login-api.ts":"28","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/services/date.ts":"29","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/get-onboarding-details-api.ts":"30","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/list-onboarding-api.ts":"31","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/reprove-request-api.ts":"32","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/sync-request-status-api.ts":"33","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/approve-request-api.ts":"34","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/utils/format-functions.ts":"35","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/get-split-values-api.ts":"36","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/put-liquidation-api.ts":"37","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-liquidations-api.ts":"38","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/cancelled-accounts/get-cancelled-accounts.ts":"39","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Login/styles.tsx":"40","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Home/styles.tsx":"41","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/styles.tsx":"42","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/styles.tsx":"43","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/put-reasons.ts":"44","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/styles.tsx":"45","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/get-reasons.ts":"46","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/update-products-api.ts":"47","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/styles.ts":"48","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-products-api.ts":"49","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-contracts-api.ts":"50","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/styles.ts":"51","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/index.tsx":"52","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/index.tsx":"53","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/IdwallStatus/index.tsx":"54","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/AccountStatus/index.tsx":"55","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Pagination/index.tsx":"56","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/ClearSaleStatus/index.tsx":"57","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/UnicoStatus/index.tsx":"58","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/index.tsx":"59","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/Item/index.tsx":"60","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Dialog/index.tsx":"61","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Modal/index.tsx":"62","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/LiquidationStatus/index.tsx":"63","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DatePicker/index.tsx":"64","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/Filters/index.tsx":"65","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/ModalNewReason/index.tsx":"66","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Modal/styles.ts":"67","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/styles.ts":"68","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/data.ts":"69","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ModalNewProduct/index.tsx":"70","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ProductStatus/index.tsx":"71","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/Filters/index.tsx":"72","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/types/permissions.ts":"73","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/ContractStatus/index.tsx":"74","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/index.tsx":"75","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Dialog/styles.tsx":"76","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/Item/styles.tsx":"77","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/ClearSaleStatus/styles.tsx":"78","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/UnicoStatus/styles.tsx":"79","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Pagination/styles.tsx":"80","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/LiquidationStatus/styles.tsx":"81","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DatePicker/styles.tsx":"82","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/AccountStatus/styles.tsx":"83","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/IdwallStatus/styles.tsx":"84","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/styles.tsx":"85","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/styles.tsx":"86","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/Filters/styles.tsx":"87","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/post reasons.ts":"88","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/ModalNewReason/styled.tsx":"89","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/data.ts":"90","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Title/index.tsx":"91","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Item/index.tsx":"92","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/SelectInput/index.tsx":"93","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableItem/index.tsx":"94","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableHeader/index.tsx":"95","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/ContractStatus/styles.tsx":"96","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/styles.tsx":"97","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/Filters/styles.tsx":"98","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ProductStatus/styles.tsx":"99","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ModalNewProduct/styled.tsx":"100","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Item/styles.ts":"101","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/SelectInput/styles.ts":"102","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Title/styles.ts":"103","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableHeader/styles.tsx":"104","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableItem/styles.tsx":"105","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/styles.ts":"106","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/remove-document-from-whitelist.ts":"107","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/batch-document-insert.ts":"108","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/insert-document-in-whitelist.ts":"109","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/list-document-whitelist.ts":"110","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/Filters/index.tsx":"111","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/TextInput/index.tsx":"112","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/Filters/styles.tsx":"113","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/TextInput/styles.tsx":"114","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/index.tsx":"115","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/styles.ts":"116","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/Filters/index.tsx":"117","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/Filters/styles.tsx":"118","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/list-plans-api.ts":"119","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/insert-plan-api.ts":"120","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/FormPlan/index.tsx":"121","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/FormPlan/styles.ts":"122","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/get-plan-api.ts":"123","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/index.tsx":"124","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/styles.ts":"125","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/Filters/index.tsx":"126","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/Filters/styles.tsx":"127","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/list-partners-api.ts":"128","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/remove-partner.ts":"129","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/FormPartner/index.tsx":"130","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/FormPartner/styles.ts":"131","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/insert-partner-api.ts":"132","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/get-partner-api.ts":"133","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/edit-partner-api.ts":"134","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/remove-plan.ts":"135"},{"size":146,"mtime":1681822897348,"results":"136","hashOfConfig":"137"},{"size":1359,"mtime":1682020767205,"results":"138","hashOfConfig":"137"},{"size":2294,"mtime":1683485372466,"results":"139","hashOfConfig":"137"},{"size":33,"mtime":1681822897344,"results":"140","hashOfConfig":"137"},{"size":1178,"mtime":1681822897352,"results":"141","hashOfConfig":"137"},{"size":2287,"mtime":1682605017335,"results":"142","hashOfConfig":"137"},{"size":412,"mtime":1681822897344,"results":"143","hashOfConfig":"137"},{"size":2309,"mtime":1681913995198,"results":"144","hashOfConfig":"137"},{"size":5622,"mtime":1681822897352,"results":"145","hashOfConfig":"137"},{"size":333,"mtime":1681822897352,"results":"146","hashOfConfig":"137"},{"size":7201,"mtime":1683809444667,"results":"147","hashOfConfig":"137"},{"size":347,"mtime":1681822897344,"results":"148","hashOfConfig":"137"},{"size":11450,"mtime":1683738344550,"results":"149","hashOfConfig":"137"},{"size":11179,"mtime":1684169940694,"results":"150","hashOfConfig":"137"},{"size":6167,"mtime":1681822897352,"results":"151","hashOfConfig":"137"},{"size":7415,"mtime":1682511416065,"results":"152","hashOfConfig":"137"},{"size":3688,"mtime":1681822897352,"results":"153","hashOfConfig":"137"},{"size":3814,"mtime":1681822897348,"results":"154","hashOfConfig":"137"},{"size":11610,"mtime":1681822897352,"results":"155","hashOfConfig":"137"},{"size":3472,"mtime":1681822897352,"results":"156","hashOfConfig":"137"},{"size":2029,"mtime":1683805876189,"results":"157","hashOfConfig":"137"},{"size":3408,"mtime":1681822897352,"results":"158","hashOfConfig":"137"},{"size":1493,"mtime":1681822897352,"results":"159","hashOfConfig":"137"},{"size":10006,"mtime":1682020773597,"results":"160","hashOfConfig":"137"},{"size":3969,"mtime":1681822897348,"results":"161","hashOfConfig":"137"},{"size":1754,"mtime":1681822897348,"results":"162","hashOfConfig":"137"},{"size":558,"mtime":1681822897348,"results":"163","hashOfConfig":"137"},{"size":542,"mtime":1681822897348,"results":"164","hashOfConfig":"137"},{"size":1314,"mtime":1681822897352,"results":"165","hashOfConfig":"137"},{"size":442,"mtime":1681822897348,"results":"166","hashOfConfig":"137"},{"size":3886,"mtime":1681822897348,"results":"167","hashOfConfig":"137"},{"size":672,"mtime":1681822897348,"results":"168","hashOfConfig":"137"},{"size":690,"mtime":1681822897348,"results":"169","hashOfConfig":"137"},{"size":802,"mtime":1681822897348,"results":"170","hashOfConfig":"137"},{"size":1672,"mtime":1681822897352,"results":"171","hashOfConfig":"137"},{"size":574,"mtime":1681822897348,"results":"172","hashOfConfig":"137"},{"size":417,"mtime":1681822897348,"results":"173","hashOfConfig":"137"},{"size":1620,"mtime":1681822897348,"results":"174","hashOfConfig":"137"},{"size":2229,"mtime":1681822897344,"results":"175","hashOfConfig":"137"},{"size":1789,"mtime":1682020778121,"results":"176","hashOfConfig":"137"},{"size":630,"mtime":1682020523603,"results":"177","hashOfConfig":"137"},{"size":219,"mtime":1681822897344,"results":"178","hashOfConfig":"137"},{"size":3253,"mtime":1681822897352,"results":"179","hashOfConfig":"137"},{"size":453,"mtime":1681822897348,"results":"180","hashOfConfig":"137"},{"size":1115,"mtime":1681822897352,"results":"181","hashOfConfig":"137"},{"size":463,"mtime":1681822897348,"results":"182","hashOfConfig":"137"},{"size":595,"mtime":1681822897348,"results":"183","hashOfConfig":"137"},{"size":3754,"mtime":1681822897352,"results":"184","hashOfConfig":"137"},{"size":1820,"mtime":1682626050980,"results":"185","hashOfConfig":"137"},{"size":2589,"mtime":1681822897348,"results":"186","hashOfConfig":"137"},{"size":3408,"mtime":1681822897352,"results":"187","hashOfConfig":"137"},{"size":717,"mtime":1682452495488,"results":"188","hashOfConfig":"137"},{"size":3152,"mtime":1681822897352,"results":"189","hashOfConfig":"137"},{"size":1456,"mtime":1681822897344,"results":"190","hashOfConfig":"137"},{"size":1140,"mtime":1681822897344,"results":"191","hashOfConfig":"137"},{"size":2177,"mtime":1682691476131,"results":"192","hashOfConfig":"137"},{"size":1174,"mtime":1681822897344,"results":"193","hashOfConfig":"137"},{"size":1131,"mtime":1681822897344,"results":"194","hashOfConfig":"137"},{"size":4428,"mtime":1682605305974,"results":"195","hashOfConfig":"137"},{"size":425,"mtime":1681822897352,"results":"196","hashOfConfig":"137"},{"size":572,"mtime":1681822897344,"results":"197","hashOfConfig":"137"},{"size":694,"mtime":1681822897344,"results":"198","hashOfConfig":"137"},{"size":1043,"mtime":1681822897352,"results":"199","hashOfConfig":"137"},{"size":1055,"mtime":1681822897344,"results":"200","hashOfConfig":"137"},{"size":3079,"mtime":1681822897348,"results":"201","hashOfConfig":"137"},{"size":2564,"mtime":1681822897352,"results":"202","hashOfConfig":"137"},{"size":1382,"mtime":1682357958381,"results":"203","hashOfConfig":"137"},{"size":1646,"mtime":1682020765741,"results":"204","hashOfConfig":"137"},{"size":1396,"mtime":1681822897352,"results":"205","hashOfConfig":"137"},{"size":9163,"mtime":1681822897352,"results":"206","hashOfConfig":"137"},{"size":1047,"mtime":1681822897352,"results":"207","hashOfConfig":"137"},{"size":1970,"mtime":1681822897352,"results":"208","hashOfConfig":"137"},{"size":370,"mtime":1682424207703,"results":"209","hashOfConfig":"137"},{"size":1211,"mtime":1681822897348,"results":"210","hashOfConfig":"137"},{"size":6424,"mtime":1681822897348,"results":"211","hashOfConfig":"137"},{"size":1038,"mtime":1682356374195,"results":"212","hashOfConfig":"137"},{"size":444,"mtime":1681822897352,"results":"213","hashOfConfig":"137"},{"size":381,"mtime":1681822897344,"results":"214","hashOfConfig":"137"},{"size":359,"mtime":1681822897344,"results":"215","hashOfConfig":"137"},{"size":649,"mtime":1681822897344,"results":"216","hashOfConfig":"137"},{"size":529,"mtime":1681822897352,"results":"217","hashOfConfig":"137"},{"size":472,"mtime":1681822897344,"results":"218","hashOfConfig":"137"},{"size":359,"mtime":1681822897344,"results":"219","hashOfConfig":"137"},{"size":359,"mtime":1681822897344,"results":"220","hashOfConfig":"137"},{"size":1132,"mtime":1684158047834,"results":"221","hashOfConfig":"137"},{"size":314,"mtime":1681822897344,"results":"222","hashOfConfig":"137"},{"size":1291,"mtime":1684158085446,"results":"223","hashOfConfig":"137"},{"size":443,"mtime":1681822897348,"results":"224","hashOfConfig":"137"},{"size":944,"mtime":1681822897352,"results":"225","hashOfConfig":"137"},{"size":515,"mtime":1681822897348,"results":"226","hashOfConfig":"137"},{"size":448,"mtime":1682010320814,"results":"227","hashOfConfig":"137"},{"size":1080,"mtime":1681822897344,"results":"228","hashOfConfig":"137"},{"size":1377,"mtime":1684161547943,"results":"229","hashOfConfig":"137"},{"size":1340,"mtime":1681822897344,"results":"230","hashOfConfig":"137"},{"size":956,"mtime":1683030759038,"results":"231","hashOfConfig":"137"},{"size":529,"mtime":1681822897348,"results":"232","hashOfConfig":"137"},{"size":1892,"mtime":1684158166055,"results":"233","hashOfConfig":"137"},{"size":1586,"mtime":1684158188363,"results":"234","hashOfConfig":"137"},{"size":479,"mtime":1681822897352,"results":"235","hashOfConfig":"137"},{"size":2272,"mtime":1681822897352,"results":"236","hashOfConfig":"137"},{"size":1145,"mtime":1682018638150,"results":"237","hashOfConfig":"137"},{"size":1223,"mtime":1684162613457,"results":"238","hashOfConfig":"137"},{"size":218,"mtime":1682018375273,"results":"239","hashOfConfig":"137"},{"size":677,"mtime":1681822897344,"results":"240","hashOfConfig":"137"},{"size":707,"mtime":1681822897344,"results":"241","hashOfConfig":"137"},{"size":4313,"mtime":1683898188466,"results":"242","hashOfConfig":"137"},{"size":393,"mtime":1681822897348,"results":"243","hashOfConfig":"137"},{"size":566,"mtime":1681822897344,"results":"244","hashOfConfig":"137"},{"size":491,"mtime":1681822897348,"results":"245","hashOfConfig":"137"},{"size":2003,"mtime":1681822897348,"results":"246","hashOfConfig":"137"},{"size":2428,"mtime":1684161630655,"results":"247","hashOfConfig":"137"},{"size":675,"mtime":1683832292709,"results":"248","hashOfConfig":"137"},{"size":1412,"mtime":1684160207324,"results":"249","hashOfConfig":"137"},{"size":524,"mtime":1684162582700,"results":"250","hashOfConfig":"137"},{"size":6585,"mtime":1683564214049,"results":"251","hashOfConfig":"137"},{"size":2476,"mtime":1683291309625,"results":"252","hashOfConfig":"137"},{"size":1707,"mtime":1683556189970,"results":"253","hashOfConfig":"137"},{"size":1462,"mtime":1684158015418,"results":"254","hashOfConfig":"137"},{"size":706,"mtime":1683116772463,"results":"255","hashOfConfig":"137"},{"size":661,"mtime":1683291232218,"results":"256","hashOfConfig":"137"},{"size":10008,"mtime":1683551531604,"results":"257","hashOfConfig":"137"},{"size":2958,"mtime":1683485669524,"results":"258","hashOfConfig":"137"},{"size":508,"mtime":1683550928567,"results":"259","hashOfConfig":"137"},{"size":7016,"mtime":1683556375795,"results":"260","hashOfConfig":"137"},{"size":2476,"mtime":1683293388292,"results":"261","hashOfConfig":"137"},{"size":1710,"mtime":1683295761170,"results":"262","hashOfConfig":"137"},{"size":1462,"mtime":1684158005534,"results":"263","hashOfConfig":"137"},{"size":720,"mtime":1683294670185,"results":"264","hashOfConfig":"137"},{"size":374,"mtime":1683295095520,"results":"265","hashOfConfig":"137"},{"size":20076,"mtime":1684264852809,"results":"266","hashOfConfig":"137"},{"size":3925,"mtime":1684263975400,"results":"267","hashOfConfig":"137"},{"size":774,"mtime":1683308874027,"results":"268","hashOfConfig":"137"},{"size":526,"mtime":1683330446475,"results":"269","hashOfConfig":"137"},{"size":796,"mtime":1683484839566,"results":"270","hashOfConfig":"137"},{"size":381,"mtime":1683485133224,"results":"271","hashOfConfig":"137"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"ub2m38",{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"274"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"274"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"274"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"274"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"274"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"274"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"274"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"274"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"274"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"274"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"274"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"274"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"274"},"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/index.tsx",[],["556","557","558","559","560"],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/App.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/Routes.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/contexts/index.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/styles/themes/default.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/contexts/Store.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/PrivateRoute/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Login/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/TokenMigration/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Home/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/index.tsx",["561"],"import React, { useEffect, useState } from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport VMasker from 'vanilla-masker';\nimport { Dialog } from '@tpinho/lib-react';\n\nimport DataTable from 'components/DataTable';\nimport { ConfigType } from 'components/DataTable/types';\nimport { Request, RequestStatus, useListOnboardingAPI } from 'hooks/api/onboarding/list-onboarding-api';\nimport { IdwallStatus } from 'components/IdwallStatus';\nimport { AccountStatus } from 'components/AccountStatus';\nimport { ClearSaleStatus } from 'components/ClearSaleStatus';\nimport { faIdCard, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useSyncRequestStatusAPI } from 'hooks/api/onboarding/sync-request-status-api';\nimport Pagination from 'components/Pagination';\nimport { UnicoStatus } from 'components/UnicoStatus';\nimport { dbToDate } from '../../services/date';\nimport Filters from './Filters';\nimport * as S from './styles';\n\ninterface SortType {\n  field: keyof Request | keyof RequestStatus;\n  asc: boolean;\n}\n\nconst Requests: React.FC = () => {\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const [filters, setFilters] = React.useState<any>({});\n  const [page, setPage] = useState<number>(1);\n  const [sort, setSort] = useState<SortType>({ field: 'createdAt', asc: true });\n  const [requests, setRequests] = useState<Request[]>([]);\n  const [count, setCount] = useState<number>();\n  const [syncingInProgress, setSyncingInProgress] = useState<Record<string, boolean>>({});\n  const perPage = 10;\n  const listOnboardingAPI = useListOnboardingAPI();\n  const syncRequestStatusAPI = useSyncRequestStatusAPI();\n\n  const fetchRequests = async () => {\n    setLoading(true);\n    setSyncingInProgress({});\n\n    try {\n      const result = await listOnboardingAPI({ page, perPage, sortField: sort.field, sortDirection: sort.asc ? 'ASC' : 'DESC' }, filters);\n\n      setRequests(result.data);\n      setCount(result.count);\n      setLoading(false);\n    } catch (_) {\n      setRequests([]);\n      setLoading(false);\n\n      Dialog.open({\n        message:\n          'Ocorreu um erro ao buscar as solicitações de abertura de conta. Tente novamente mais tarde ou entre em contato com o suporte.',\n        title: 'Erro',\n      });\n    }\n  };\n\n  /**\n   * After the sort, page or filters data changes, recalls the API\n   * passing forward the new parameters\n   */\n  useEffect(() => {\n    fetchRequests();\n  }, [filters, page, sort]);\n\n  /** Resets the page state after a filter change  */\n  const onFiltersChange = (newFilters: any) => {\n    setPage(1);\n    setFilters(newFilters);\n  };\n\n  const onSyncRequestStatus = async (id: string) => {\n    if (syncingInProgress[id]) {\n      return;\n    }\n\n    setSyncingInProgress((prev) => ({ ...prev, [id]: true }));\n\n    try {\n      const updatedRequest = await syncRequestStatusAPI(id);\n\n      setRequests((prevRequests) => prevRequests.map((request) => (request.id === id ? updatedRequest : request)));\n    } catch (_) {\n      //\n    } finally {\n      setSyncingInProgress((prev) => ({ ...prev, [id]: false }));\n    }\n  };\n\n  const handleSort = (field: string) => {\n    if (sort.field === field) {\n      if (sort.asc) return 2;\n      return 1;\n    }\n    return 0;\n  };\n\n  const openRequestDetails = (current: Request): void => {\n    window.open(`/requests/${current.id}`);\n  };\n\n  const columns: ConfigType<Request>[] = [\n    {\n      title: 'CPF',\n      size: { md: 1.2 },\n      dataPath: (row) => VMasker.toPattern(row.userDocument, '999.999.999-99') || '',\n    },\n    {\n      title: 'Solicitação',\n      size: { md: 1.5 },\n      dataPath: (row) => dbToDate(row.createdAt, 'dd/MM/yyyy HH:mm:ss') || '',\n      order: handleSort('createdAt'),\n      onClickOrder: () => setSort({ field: 'createdAt', asc: !sort.asc }),\n    },\n    {\n      title: 'Última Atualização',\n      size: { md: 1.5 },\n      dataPath: (row) => dbToDate(row.updatedAt, 'dd/MM/yyyy HH:mm:ss') || '',\n      order: handleSort('updatedAt'),\n      onClickOrder: () => setSort({ field: 'updatedAt', asc: !sort.asc }),\n    },\n    {\n      title: 'Unico',\n      size: { md: 1.5 },\n      align: 'center',\n      dataPath: (row) => (\n        <S.StatusContainer>\n          <UnicoStatus status={row.crediDefenceResult} />\n        </S.StatusContainer>\n      ),\n      order: handleSort('crediDefenceResult'),\n      onClickOrder: () => setSort({ field: 'crediDefenceResult', asc: !sort.asc }),\n    },\n    {\n      title: 'Idwall',\n      size: { md: 1.5 },\n      align: 'center',\n      dataPath: (row) => (\n        <S.StatusContainer>\n          <IdwallStatus status={row.status.idWallResult} />\n        </S.StatusContainer>\n      ),\n      order: handleSort('idWallResult'),\n      onClickOrder: () => setSort({ field: 'idWallResult', asc: !sort.asc }),\n    },\n    {\n      title: 'ClearSale',\n      size: { md: 1 },\n      align: 'center',\n      dataPath: (row) => (\n        <S.StatusContainer>\n          <ClearSaleStatus status={row.clearSaleStatus} />\n        </S.StatusContainer>\n      ),\n      order: handleSort('clearSaleStatus'),\n      onClickOrder: () => setSort({ field: 'clearSaleStatus', asc: !sort.asc }),\n    },\n    {\n      title: 'Status',\n      size: { md: 1 },\n      align: 'center',\n      dataPath: (row) => (\n        <S.StatusContainer>\n          <AccountStatus status={row.status.status} />\n        </S.StatusContainer>\n      ),\n      order: handleSort('status'),\n      onClickOrder: () => setSort({ field: 'status', asc: !sort.asc }),\n    },\n    {\n      title: 'Parceiro',\n      size: { md: 1.4 },\n      align: 'center',\n      dataPath: (row) => 'Banco Digimais',\n      order: handleSort('status'),\n      onClickOrder: () => setSort({ field: 'status', asc: !sort.asc }),\n    },\n    {\n      title: 'Ações',\n      size: { md: 1.2 },\n      align: 'center',\n      dataPath: (row) => {\n        return (\n          <S.ItemContainer>\n            {row.status.status !== 'PENDENT' && (\n              <S.Action twoButtons onClick={() => onSyncRequestStatus(row.id)} disabled={syncingInProgress[row.id]}>\n                <S.Icon icon={faSyncAlt} spin={syncingInProgress[row.id]} />\n                <span>Sincronizar</span>\n              </S.Action>\n            )}\n\n            <S.Action onClick={() => openRequestDetails(row)}>\n              <S.Icon icon={faIdCard} />\n              <span>Detalhes</span>\n            </S.Action>\n          </S.ItemContainer>\n        );\n      },\n    },\n  ];\n\n  const renderDataTable = () => {\n    if (loading)\n      return (\n        <>\n          <S.Center>\n            <ClipLoader color='#555' size={36} />\n            <S.LoaderDescription>Carregando dados...</S.LoaderDescription>\n          </S.Center>\n        </>\n      );\n\n    return (\n      <S.TableContainer>\n        <DataTable config={columns} data={requests} />\n\n        <Pagination page={page} count={count} perPage={perPage} onChange={setPage} maxPages={5} />\n      </S.TableContainer>\n    );\n  };\n\n  return (\n    <S.Container>\n      <S.Title loading={loading ? 1 : 0}>Solicitações de Abertura de Conta</S.Title>\n      <Filters loading={loading} onSubmit={onFiltersChange} onRefresh={fetchRequests} />\n      {renderDataTable()}\n    </S.Container>\n  );\n};\n\nexport default Requests;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/index.tsx",["562","563"],"import React, { FormEvent, useEffect, useState } from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport DataTable from 'components/DataTable';\nimport { ConfigType } from 'components/DataTable/types';\nimport Pagination from 'components/Pagination';\nimport VMasker from 'vanilla-masker';\nimport { dbToDate } from 'services/date';\nimport TextInput from 'components/TextInput';\nimport { Dialog, Modal } from '@tpinho/lib-react/dist';\nimport Filters from './Filters';\nimport * as S from './styles';\nimport { Filter, Sort, useListDocumentWhitelistAPI, Whitelist as IWhiteList } from 'hooks/api/document-whitelist/list-document-whitelist';\nimport { useInsertDocumentInWhitelistAPI } from 'hooks/api/document-whitelist/insert-document-in-whitelist';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { useRemoveDocumentFromWhitelistAPI } from 'hooks/api/document-whitelist/remove-document-from-whitelist';\nimport { useBatchDocumentInsertAPI } from 'hooks/api/document-whitelist/batch-document-insert';\nimport { isCpfValid } from 'utils/format-functions';\nimport SelectInput from 'components/SelectInput';\nimport { Partner } from 'types/partners';\nimport { useListPartnersAPI } from 'hooks/api/partners/list-partners-api';\nimport { SelectType } from 'components/SelectInput/types';\n\nconst Whitelist: React.FC = () => {\n  const perPage = 10;\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [page, setPage] = useState<number>(1);\n  const [data, setData] = useState<IWhiteList[]>([]);\n  const [count, setCount] = useState<number>();\n  const [filters, setFilters] = useState<Filter>({});\n  const [sort, setSort] = useState<Sort>({ field: 'createdAt', asc: true });\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [isAddingData, setIsAddingData] = useState(false);\n  const [newDocument, setNewDocument] = useState('');\n  const [partnerId, setPartnerId] = useState<string>('');\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [isRemovingData, setIsRemovingData] = useState(false);\n  const [documentToRemove, setDocumentToRemove] = useState('');\n  const [isUploadingFile, setIsUploadingFile] = useState(false);\n  const [partners, setPartners] = useState<SelectType[]>([]);\n\n  const listAPI = useListDocumentWhitelistAPI();\n  const listParters = useListPartnersAPI();\n  const insertAPI = useInsertDocumentInWhitelistAPI();\n  const removeAPI = useRemoveDocumentFromWhitelistAPI(documentToRemove);\n  const batchInsertAPI = useBatchDocumentInsertAPI();\n\n  const fetchDocuments = async () => {\n    try {\n      setLoading(true);\n      const response = await listAPI(perPage, page, sort, filters);\n\n      setData(response.data);\n      setCount(response.count);\n    } catch (error) {\n      Dialog.open({\n        title: 'Atenção',\n        message: 'Ocorreu um erro ao tentar listar os documentos, tente novamente ou entre em contato com o suporte.',\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchPartners = async () => {\n    try {\n      setLoading(true);\n      const response = await listParters();\n      response.data.forEach((partner) => {\n        setPartners((oldArray) => [...oldArray, { value: partner.id, label: partner.name }]);\n      });\n      const planFirst = response.data[0];\n      setPartnerId(planFirst.id);\n    } catch (error) {\n      setPartnerId('');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDocuments();\n  }, [page, filters, sort]);\n\n  useEffect(() => {\n    fetchPartners();\n  }, []);\n\n  const openCreateModal = () => {\n    setNewDocument('');\n    setShowCreateModal(true);\n  };\n\n  const addNewDocument = async (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!isCpfValid(newDocument)) {\n      return;\n    }\n\n    try {\n      setIsAddingData(true);\n      await insertAPI(newDocument);\n      fetchDocuments();\n    } catch (error) {\n      if (error?.code === 'already_whitelisted_cpf') {\n        Dialog.open({\n          title: 'Atenção',\n          message: 'Este CPF já faz parte da lista de CPF pré-cadastrados',\n        });\n      } else {\n        Dialog.open({\n          title: 'Atenção',\n          message: 'Ocorreu um erro ao tentar inserir o CPF.',\n        });\n      }\n    } finally {\n      setIsAddingData(false);\n      setShowCreateModal(false);\n    }\n  };\n\n  const downloadCPFList = async (cpfs: string[]) => {\n    let csv = `data:text/csv;charset=utf-8,CPFs não inseridos\\n`;\n    csv += cpfs.map((cpf) => VMasker.toPattern(cpf.replaceAll(/\\D/g, ''), '999.999.999-99')).join('\\r\\n');\n    const encodedUri = encodeURI(csv);\n    window.open(encodedUri);\n  };\n\n  const batchInsert = async (event: React.FormEvent<HTMLInputElement>) => {\n    const file = event.currentTarget.files?.item(0);\n    const target = event.currentTarget;\n    target.value = '';\n\n    if (!file) {\n      return;\n    }\n\n    try {\n      setIsUploadingFile(true);\n      const response = await batchInsertAPI(file);\n      fetchDocuments();\n      if (response.notIsertedCpfs.length > 0) {\n        Dialog.open({\n          title: 'Atenção',\n          message:\n            'Ocorreu um erro ao tentar inserir alguns CPFs do arquivo fornecido. Clique no botão abaixo para baixar um arquivo com os CPFs não inseridos.',\n          buttons: [\n            { label: 'Baixar Lista de CPFs não inseridos', color: 'blue', onClick: () => downloadCPFList(response.notIsertedCpfs) },\n          ],\n        });\n      }\n    } catch (error) {\n      Dialog.open({\n        title: 'Atenção',\n        message: 'Ocorreu um erro ao tentar processar o arquivo. Tente novamente ou entre em contato com o suporte.',\n      });\n    } finally {\n      setIsUploadingFile(false);\n    }\n  };\n\n  const removeSelectedDocument = async () => {\n    try {\n      setIsRemovingData(true);\n      await removeAPI();\n\n      fetchDocuments();\n    } catch (error) {\n      Dialog.open({\n        title: 'Erro',\n        message: 'Ocorreu um erro ao tentar remover o documento selecionado.',\n      });\n    } finally {\n      setShowRemoveModal(false);\n      setIsRemovingData(false);\n    }\n  };\n\n  const handleSort = (field: keyof IWhiteList) => {\n    if (sort.field === field) {\n      if (sort.asc) return 2;\n      return 1;\n    }\n    return 0;\n  };\n  const onChangeSelect = (id: string) => {\n    setPartnerId(id);\n  };\n  const columns: ConfigType<IWhiteList>[] = [\n    {\n      dataPath: (row) => VMasker.toPattern(row.cpf, '999.999.999-99'),\n      title: 'CPF',\n      size: { md: 2 },\n      order: handleSort('cpf'),\n      onClickOrder: () => setSort({ field: 'cpf', asc: !sort.asc }),\n    },\n    {\n      dataPath: (row) => dbToDate(row.createdAt, 'dd/MM/yyyy HH:mm:ss'),\n      title: 'Data de inclusão',\n      size: { md: 2 },\n      order: handleSort('createdAt'),\n      onClickOrder: () => setSort({ field: 'createdAt', asc: !sort.asc }),\n    },\n    {\n      dataPath: (row) => row.userLdap,\n      title: 'Responsável',\n      size: { md: 4 },\n      order: handleSort('userLdap'),\n      onClickOrder: () => setSort({ field: 'userLdap', asc: !sort.asc }),\n    },\n    {\n      dataPath: (row) => 'Banco Digimais',\n      title: 'Parceiro',\n      size: { md: 3 },\n      order: handleSort('userLdap'),\n      onClickOrder: () => setSort({ field: 'userLdap', asc: !sort.asc }),\n    },\n    {\n      dataPath: (row) => (\n        <S.RemoveDocumentAction\n          onClick={() => {\n            setDocumentToRemove(row.id);\n            setShowRemoveModal(true);\n          }}\n        >\n          <S.RemoveDocumentActionIcon icon={faTrashAlt} />\n          Remover\n        </S.RemoveDocumentAction>\n      ),\n      title: '',\n      size: { md: 1 },\n    },\n  ];\n\n  const renderDataTable = () => {\n    if (loading)\n      return (\n        <>\n          <S.Center>\n            <ClipLoader color='#555' size={36} />\n            <S.LoaderDescription>Carregando dados...</S.LoaderDescription>\n          </S.Center>\n        </>\n      );\n\n    return (\n      <S.TableContainer>\n        <DataTable config={columns} data={data} />\n\n        <Pagination page={page} count={count} perPage={perPage} onChange={setPage} maxPages={5} />\n      </S.TableContainer>\n    );\n  };\n\n  const renderCreateModal = () => {\n    return (\n      <form onSubmit={addNewDocument}>\n        <Modal show={showCreateModal} onClose={() => setShowCreateModal(false)} size={{ md: 4 }}>\n          <S.ModalView>\n            <S.ModalMessage>Inclusão de CPF na lista de cadastro</S.ModalMessage>\n            <S.Form>\n              <TextInput\n                label='CPF'\n                value={newDocument}\n                onChange={(document: string) => setNewDocument(VMasker.toPattern(document, '999.999.999-99'))}\n                required\n                autoFocus\n                error={newDocument.length === 14 && !isCpfValid(newDocument) ? 'O CPF informado não é um CPF válido' : undefined}\n                minLength={14}\n                maxLength={14}\n              />\n              <SelectInput\n                label='Parceiro'\n                value={partnerId}\n                data={partners}\n                onChange={(value) => {\n                  onChangeSelect(value);\n                }}\n              />{' '}\n            </S.Form>\n            <S.ModalRow>\n              <S.ApproveButton disabled={isAddingData} type='submit'>\n                {isAddingData ? <ClipLoader color='white' size={15} /> : 'Incluir'}\n              </S.ApproveButton>\n              <S.DisapproveButton onClick={() => setShowCreateModal(false)}>Cancelar</S.DisapproveButton>\n            </S.ModalRow>\n          </S.ModalView>\n        </Modal>\n      </form>\n    );\n  };\n\n  const renderRemoveModal = () => {\n    return (\n      <Modal show={showRemoveModal} onClose={() => setShowRemoveModal(false)} size={{ md: 4 }}>\n        <S.ModalView>\n          <S.ModalMessage>Remoção de CPF na lista de cadastro</S.ModalMessage>\n          <S.ModalSubMessage>\n            A remoção de um documento desta tabela não exclui as solicitações de onboarding já realizadas para este documento!\n          </S.ModalSubMessage>\n          <S.ModalRow>\n            <S.ApproveButton disabled={isRemovingData} onClick={removeSelectedDocument}>\n              {isRemovingData ? <ClipLoader color='white' size={15} /> : 'Remover'}\n            </S.ApproveButton>\n            <S.DisapproveButton onClick={() => setShowRemoveModal(false)}>Cancelar</S.DisapproveButton>\n          </S.ModalRow>\n        </S.ModalView>\n      </Modal>\n    );\n  };\n\n  return (\n    <S.Container>\n      <S.Title loading={loading ? 1 : 0}>Cadastros</S.Title>\n      <Filters loading={loading} onSubmit={setFilters} onRefresh={fetchDocuments} />\n      <S.ActionWrapper>\n        <S.Action onClick={openCreateModal}>Incluir</S.Action>\n\n        <S.OpenFileAction disabled={isUploadingFile}>\n          {isUploadingFile ? <ClipLoader color='white' size={15} /> : 'Carregar Arquivo'}\n          <S.OpenFileInput type='file' accept='.csv,.xslx' onInput={batchInsert} disabled={isUploadingFile} />\n        </S.OpenFileAction>\n      </S.ActionWrapper>\n      {renderDataTable()}\n      {renderCreateModal()}\n      {renderRemoveModal()}\n    </S.Container>\n  );\n};\n\nexport default Whitelist;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/index.tsx",["564","565"],"import React, { ReactElement, useEffect, useState } from 'react';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport DatePicker from 'components/DatePicker';\nimport DataTable from 'components/DataTable';\nimport { ConfigType } from 'components/DataTable/types';\nimport { Sort, useListLiquidationsAPI, LiquidationEntry, RequestPagination } from 'hooks/api/products/list-liquidations-api';\nimport { Modal as ModalFromLib } from '@tpinho/lib-react/dist';\nimport { dbToDate } from 'services/date';\nimport { LiquidationStatus } from './LiquidationStatus';\nimport { renderHTML } from './note-html';\nimport ReactHtmlParser from 'react-html-parser';\nimport { jsPDF } from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport VMasker from 'vanilla-masker';\nimport { LiquidationEmpty } from './constants';\nimport { usePutLiquidationsAPI } from 'hooks/api/products/put-liquidation-api';\nimport { useGetSplitValuesAPI } from 'hooks/api/products/get-split-values-api';\nimport Pagination from 'components/Pagination';\nimport * as S from './styles';\nimport Modal from 'components/Modal';\nimport { Dialog } from 'components/Dialog';\n\nfunction Liquidations(): ReactElement {\n  const perPage = 10;\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [sort, setSort] = useState<Sort>({ field: 'createdAt', asc: true });\n  const [page, setPage] = useState<number>(1);\n  const [count, setCount] = useState<number>();\n  const [liquidationsEntries, setLiquidationsEntries] = useState<LiquidationEntry[]>([]);\n  const [selectedLiquidation, setSelectedLiquidation] = useState<LiquidationEntry>(LiquidationEmpty);\n  const [showModalPDF, setShowModalPDF] = useState<boolean>(false);\n  const [dynamicFields, setDynamicFields] = useState<any>({});\n  const [from, setFrom] = useState<string>('');\n  const [to, setTo] = useState<string>('');\n\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [showLiquidationsErrorDialog, setShowLiquidationsErrorDialog] = useState<boolean>(false);\n\n  const fetchLiquidationsApi = useListLiquidationsAPI();\n  const putLiquidationsAPI = usePutLiquidationsAPI();\n  const getSplitValuesAPI = useGetSplitValuesAPI();\n\n  const pagination: RequestPagination = {\n    Page: page,\n    perPage,\n    sortField: sort.field,\n    sortDirection: sort.asc ? 'ASC' : 'DESC',\n  };\n\n  const updateFields = (id: string, value: string): void => {\n    setDynamicFields({\n      ...dynamicFields,\n      [id]: value,\n    });\n  };\n\n  const fetchLiquidations = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetchLiquidationsApi(pagination);\n\n      setLiquidationsEntries(response.data);\n\n      setCount(response.count);\n    } catch (err) {\n      setCount(0);\n      setLiquidationsEntries([]);\n\n      setErrorMessage('Ocorreu um erro ao tentar listar as liquidações, tente novamente ou entre em contato com o suporte.');\n      setShowLiquidationsErrorDialog(true);\n    }\n\n    setLoading(false);\n  };\n\n  const saveInvoiceId = async (id: string, invoice: string): Promise<void> => {\n    if (invoice === '') {\n      window.alert('Por favor insira o número da nota!');\n\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      await putLiquidationsAPI(id, invoice);\n\n      window.alert('Nota salva com sucesso!');\n\n      fetchLiquidations();\n    } catch (err) {\n      setErrorMessage('Ocorreu um erro ao tentar salvar a nota, tente novamente ou entre em contato com o suporte.');\n      setShowLiquidationsErrorDialog(true);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchLiquidations();\n  }, [page, sort]);\n\n  const handleSort = (field: string) => {\n    if (sort.field === field) {\n      if (sort.asc) return 2;\n      return 1;\n    }\n    return 0;\n  };\n\n  // Converts 2022-25-02 to 25/02/2022\n  function formatDate(date: string): string {\n    const splittedDate = date.replace(/-/g, '/').split('/');\n\n    return `${splittedDate[2]}/${splittedDate[1]}/${splittedDate[0]}` || date;\n  }\n\n  const saveSearch = async (item: LiquidationEntry): Promise<void> => {\n    try {\n      await getSplitValuesAPI(item.initialDate, item.finalDate, true);\n\n      setFrom('');\n      setTo('');\n\n      setSort({ field: 'createdAt', asc: true });\n    } catch (err) {\n      setErrorMessage('Ocorreu um erro ao tentar salvar o cálculo, tente novamente ou entre em contato com o suporte.');\n      setShowLiquidationsErrorDialog(true);\n    }\n  };\n\n  const columns: ConfigType<LiquidationEntry>[] = [\n    {\n      title: 'Data in',\n      size: { md: 1 },\n      dataPath: (row) => (row.initialDate.includes('T') ? dbToDate(row.initialDate, 'dd/MM/yyyy') : formatDate(row.initialDate)),\n      order: handleSort('initialDate'),\n      onClickOrder: () => setSort({ field: 'initialDate', asc: !sort.asc }),\n    },\n    {\n      title: 'Data out',\n      size: { md: 1 },\n      dataPath: (row) => (row.finalDate.includes('T') ? dbToDate(row.finalDate, 'dd/MM/yyyy') : formatDate(row.finalDate)),\n      order: handleSort('finalDate'),\n      onClickOrder: () => setSort({ field: 'finalDate', asc: !sort.asc }),\n    },\n    {\n      title: 'Data Liquidação',\n      size: { md: 1 },\n      dataPath: (row) => (row.createdAt.includes('T') ? dbToDate(row.createdAt, 'dd/MM/yyyy') : formatDate(row.createdAt)),\n      order: handleSort('createdAt'),\n      onClickOrder: () => setSort({ field: 'createdAt', asc: !sort.asc }),\n    },\n    {\n      title: 'Valor Total',\n      size: { md: 1 },\n      dataPath: (row) => VMasker.toMoney(row.totalValue, { unit: 'R$' }),\n      order: handleSort('totalValue'),\n      onClickOrder: () => setSort({ field: 'totalValue', asc: !sort.asc }),\n    },\n    {\n      title: 'Valor do Fornecedor',\n      size: { md: 1 },\n      dataPath: (row) => VMasker.toMoney(row.supplierValue, { unit: 'R$' }),\n      order: handleSort('supplierValue'),\n      onClickOrder: () => setSort({ field: 'supplierValue', asc: !sort.asc }),\n    },\n    {\n      title: 'Valor Banco',\n      size: { md: 1 },\n      dataPath: (row) => VMasker.toMoney(row.bankValue, { unit: 'R$' }),\n      order: handleSort('bankValue'),\n      onClickOrder: () => setSort({ field: 'bankValue', asc: !sort.asc }),\n    },\n    {\n      title: 'Status',\n      size: { md: 1.5 },\n      align: 'center',\n      dataPath: (row) => {\n        return row.newEntry ? (\n          <></>\n        ) : (\n          <S.StatusContainer>\n            <LiquidationStatus status={row.invoice ? 'LIQUIDADO' : 'PENDENTE'} />\n          </S.StatusContainer>\n        );\n      },\n    },\n    {\n      title: 'Nota Fiscal',\n      size: { md: 1.2 },\n      align: 'center',\n      dataPath: (row) => {\n        return row.newEntry ? (\n          <></>\n        ) : (\n          <S.ItemsLineContainer>\n            <S.InputField\n              type='text'\n              disabled={!!row.invoice}\n              value={row.invoice ? row.invoice : undefined}\n              onChange={(event) => updateFields(row.id, event.target.value)}\n            />\n          </S.ItemsLineContainer>\n        );\n      },\n    },\n    {\n      title: 'Ações',\n      size: { md: 1.2 },\n      align: 'center',\n\n      dataPath: (row) => {\n        return row.newEntry ? (\n          <S.ItemContainer>\n            <S.ActionSaveNote onClick={(): Promise<void> => saveSearch(row)}>Salvar Cálculo</S.ActionSaveNote>\n          </S.ItemContainer>\n        ) : (\n          <S.ItemContainer>\n            {!row.invoice && (\n              <S.ActionSaveNote twoButtons onClick={() => saveInvoiceId(row.id, row.id in dynamicFields ? dynamicFields[row.id] : '')}>\n                Salvar\n              </S.ActionSaveNote>\n            )}\n            <S.ActionShowPdf onClick={() => setShowModalPDF(true)}>PDF</S.ActionShowPdf>\n          </S.ItemContainer>\n        );\n      },\n      onClick(item: LiquidationEntry) {\n        setSelectedLiquidation(item);\n      },\n    },\n  ];\n\n  const handleModalPDFonClose = () => {\n    setShowModalPDF(false);\n  };\n\n  const handleSavePdf = async () => {\n    const element = document.getElementById('note-in-pdf');\n    if (element) {\n      const canvas = await html2canvas(element);\n      const imgData = canvas.toDataURL('image/png', 5.0);\n      // eslint-disable-next-line new-cap\n      const doc = new jsPDF('p', 'mm', 'a4', false);\n\n      // doc.html(element.innerHTML);\n\n      doc.addImage(imgData, 'PNG', 5, 20, 200, 200);\n      doc.save(`Relatorio-uso.pdf`);\n    }\n  };\n\n  const renderPDFmodal = (liquidationToRender: LiquidationEntry) => {\n    return (\n      <ModalFromLib show={showModalPDF} onClose={() => handleModalPDFonClose()} size={{ lg: 6 }}>\n        <S.ModalView>\n          <S.ModalViewScrollable>\n            <S.PDFspacer id='note-in-pdf'>{ReactHtmlParser(renderHTML(liquidationToRender))}</S.PDFspacer>\n          </S.ModalViewScrollable>\n\n          <S.ApproveButton onClick={() => handleSavePdf()}>\n            {loading ? <ClipLoader color='white' size={15} /> : 'Salvar PDF'}\n          </S.ApproveButton>\n        </S.ModalView>\n      </ModalFromLib>\n    );\n  };\n\n  const renderDataTable = () => {\n    if (loading)\n      return (\n        <>\n          <S.Center>\n            <ClipLoader color='#555' size={36} />\n\n            <S.LoaderDescription>Carregando dados...</S.LoaderDescription>\n          </S.Center>\n        </>\n      );\n\n    return (\n      <S.TableContainer>\n        <DataTable config={columns} data={liquidationsEntries} />\n        <Pagination page={page} count={count} perPage={perPage} onChange={setPage} />\n      </S.TableContainer>\n    );\n  };\n\n  const searchLiquidations = async (): Promise<void> => {\n    if (from === '' || to === '') return;\n\n    setLoading(true);\n\n    try {\n      const today = new Date();\n\n      const response = await getSplitValuesAPI(from, to, false);\n\n      const newEntry = {\n        newEntry: true,\n        createdAt: today.toISOString(),\n        updateAt: today.toISOString(),\n        initialDate: from,\n        finalDate: to,\n        id: 'newEntry',\n        invoice: '',\n        userLdap: '',\n        splited_values: response,\n        totalValue: response.totalValue,\n        supplierValue: response.supplierValue,\n        bankValue: response.bankValue,\n      } as LiquidationEntry;\n\n      setLiquidationsEntries([newEntry, ...liquidationsEntries]);\n    } catch (err) {\n      setErrorMessage('Ocorreu um erro ao tentar separar os valores, tente novamente ou entre em contato com o suporte.');\n      setShowLiquidationsErrorDialog(true);\n    }\n\n    setLoading(false);\n  };\n\n  const renderSearch = (): ReactElement => {\n    return (\n      <S.Row>\n        <S.DateWrapper>\n          <DatePicker label='De: ' value={from} onChange={setFrom} limitToYesterdayDate />\n        </S.DateWrapper>\n\n        <S.DateWrapper>\n          <DatePicker label='Até: ' value={to} onChange={setTo} limitToYesterdayDate />\n        </S.DateWrapper>\n\n        <S.Action disabled={from === '' || to === ''} onClick={searchLiquidations}>\n          Calcular\n        </S.Action>\n      </S.Row>\n    );\n  };\n\n  const handleListLiquidationsErrorDialogOnClose = () => {\n    setShowLiquidationsErrorDialog(false);\n  };\n\n  return (\n    <>\n      <S.Container>\n        <S.Title loading={loading ? 1 : 0}>Liquidação Produtos</S.Title>\n\n        {renderSearch()}\n\n        {renderDataTable()}\n\n        {renderPDFmodal(selectedLiquidation)}\n      </S.Container>\n\n      <Modal show={showLiquidationsErrorDialog} handleClose={handleListLiquidationsErrorDialogOnClose}>\n        <Dialog\n          isVisible={showLiquidationsErrorDialog}\n          title='Atenção'\n          message={errorMessage}\n          onClose={handleListLiquidationsErrorDialogOnClose}\n        />\n      </Modal>\n    </>\n  );\n}\n\nexport default Liquidations;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/TokenMigration/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/styles.ts",["566"],"import styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype ButtonProps = {\n  twoButtons?: boolean;\n  disabled?: boolean;\n};\n\nexport const Container = styled.div`\n  flex-direction: column;\n  padding: 30px;\n  width: 100%;\n`;\n\nexport const Title = styled.h1<{ loading: 1 | 0 }>`\n  font-size: 32px;\n  filter: blur(${({ loading }) => (loading ? '2px' : '0px')});\n`;\n\nexport const Action = styled.button<ButtonProps>`\n  &:focus {\n    outline: none;\n  }\n\n  height: 24px;\n  width: max-content;\n  background-color: transparent;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  span {\n    visibility: hidden;\n    background-color: #555;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px;\n    position: absolute;\n    z-index: 1;\n    bottom: 125%;\n    left: 50%;\n    margin-left: -40px;\n    opacity: 0;\n    transition: opacity 0.3s;\n  }\n\n  span::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    margin-left: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: #555 transparent transparent transparent;\n  }\n\n  &:hover span {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nexport const StatusContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Center = styled.div`\n  flex: 1;\n  justify-content: center;\n  margin-top: 20px;\n  width: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  margin: 0 5px;\n  color: #1c1c7c;\n  cursor: pointer;\n`;\n\nexport const LoaderDescription = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  padding-top: 16px;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  width: 60px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/constants.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/note-html.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/service-ms-intranet.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/get-account-validation-list-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/login-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/services/date.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/get-onboarding-details-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/list-onboarding-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/reprove-request-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/sync-request-status-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/onboarding/approve-request-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/utils/format-functions.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/get-split-values-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/put-liquidation-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-liquidations-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/cancelled-accounts/get-cancelled-accounts.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Login/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Home/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/put-reasons.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/get-reasons.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/update-products-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-products-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/products/list-contracts-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/IdwallStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/AccountStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Pagination/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/ClearSaleStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/UnicoStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/Item/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Dialog/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Modal/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/LiquidationStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DatePicker/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/Filters/index.tsx",["567","568"],"import DatePicker from 'components/DatePicker';\nimport { Filter } from 'hooks/api/cancelled-accounts/get-cancelled-accounts';\nimport React, { useEffect } from 'react';\nimport VMasker from 'vanilla-masker';\nimport * as S from './styles';\n\ninterface IProps {\n  onSubmit: (data: any) => void;\n  onRefresh: () => void;\n  loading: boolean;\n}\n\ninterface IValue {\n  value: string;\n  label: string;\n}\n\nconst Filters: React.FC<IProps> = ({ onSubmit, loading, onRefresh }) => {\n  const [state, setState] = React.useState<Filter>({});\n  const [fieldValue, setFieldValue] = React.useState<string>('');\n  const [selectedDropDown, setSelectedDropDown] = React.useState<IValue>({ value: '0', label: 'CPF' });\n\n  // Hold calling on submit for 500ms after internal state change\n  useEffect(() => {\n    // It's not necessary to call onSubmit, since it is already called on handleOnClean\n    if (Object.keys(state).length === 0) {\n      return () => {\n        // NOOP\n      };\n    }\n\n    const timeout = setTimeout(() => {\n      onSubmit({ ...state, cpf: state.cpf?.replace(/\\D/g, '') });\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [state]);\n\n  const genericHandleOnChange = (field: string) => (value: string) => {\n    setState({ ...state, [field]: value });\n  };\n\n  const onSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    // const cpf = VMasker.toPattern(e.target.value.trim(), '999.999.999-99');\n    // setState({ ...state, cpf });\n    setFieldValue(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const search = () =>{\n    if(selectedDropDown.label === 'CPF') {\n      setState({ ...state, cpf: fieldValue, account: '', description: ''});\n    } else if(selectedDropDown.label === 'Conta'){\n      setState({ ...state, account: fieldValue, description: '', cpf: ''});\n    } else{\n      setState({ ...state, description: fieldValue, account: '', cpf: ''});\n    }\n  }\n\n  const handleOnClean = () => {\n    setState({});\n    onSubmit({});\n    setFieldValue('');\n    setSelectedDropDown({ value: '0', label: 'CPF' });\n  };\n\n  const dropDownData = [\n    { value: '0', label: 'CPF' },\n    { value: '1', label: 'Conta' },\n    { value: '2', label: 'Motivo' },\n  ]\n\n  return (\n    <S.Container loading={loading ? 1 : 0}>\n      <S.SearchInputContainer>\n        <S.SearchInput placeholder='Procurar por' value={fieldValue} onChange={onSearchInputChange} />\n        <S.Select data={dropDownData} value={selectedDropDown} onChange={(value) => setSelectedDropDown(value as IValue)} />\n        <S.SearchButton onClick={search}>Procurar</S.SearchButton>\n      </S.SearchInputContainer>\n      <S.Field>\n        <DatePicker label='A partir de' value={state.from} onChange={genericHandleOnChange('from')} />\n      </S.Field>\n      <S.Field>\n        <DatePicker label='Até' value={state.to} onChange={genericHandleOnChange('to')} />\n      </S.Field>\n\n      <S.Field>\n        <S.Button onClick={onRefresh}>Atualizar</S.Button>\n        <S.Button onClick={handleOnClean}>Limpar</S.Button>\n      </S.Field>\n    </S.Container>\n  );\n};\n\nexport default Filters;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/ModalNewReason/index.tsx",["569"],"import React, { ChangeEvent } from 'react';\nimport { Dialog, hooks } from '@tpinho/lib-react/dist';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport Modal from 'components/Modal';\nimport * as S from './styled';\nimport { usePostReasons } from 'hooks/api/reasons/post reasons';\n\ninterface ModalNewReasonProps {\n  isVisible: boolean;\n  onClose: () => void;\n}\n\nexport const ModalNewReason: React.FC<ModalNewReasonProps> = ({ isVisible, onClose }) => {\n  const [errorMessage, setErrorMessage] = hooks.useState('Algo deu errado. Suas informações estão corretas?');\n  const postReasons = usePostReasons();\n  const [state, setState] = hooks.useState({\n    description: '',\n    error: null,\n    submitDisabled: null,\n  })\n\n  const onChange = (field: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    setState({ [field]: event.target.value });\n  };\n\n  const handleOnClose = () => {\n    setState({ description: '', error: false, submitDisabled: false });\n    onClose();\n  };\n\n  const handleOnSubmit = async () => {\n    if (!state.description) {\n      setErrorMessage('Todas informações são obrigatórias!');\n      setState({ error: true });\n      return;\n    }\n\n    try {\n      setState({ submitDisabled: true });\n      await postReasons({description: state.description, status: 'Enable'});\n      setState({ error: false, submitDisabled: false });\n      handleOnClose();\n    } catch (e) {\n      setErrorMessage('Algo deu errado. Suas informações estão corretas?');\n      setState({ error: true, submitDisabled: false });\n      console.log(e);\n    }\n  };\n\n  const handleOpenConfirmationDialog = () => {\n    Dialog.open({\n      title: 'Criar Novo Motivo',\n      message: `Deseja realmente criar um motivo com a descrição: ${state.description}`,\n      buttons: [\n        { label: 'Cancelar', onClick: () => {return null}, color: 'red' },\n        { label: 'Confirmar', onClick: () => handleOnSubmit(), color: 'success' },\n      ],\n    })\n  }\n\n  return (\n    <Modal show={isVisible} handleClose={handleOnClose}>\n      <S.Form error={state.error ? 1 : 0}>\n        <S.ModalTitle>Cadastrar novo motivo</S.ModalTitle>\n        {state.error ? <p>{errorMessage}</p> : ''}\n\n        <input type='text' name='description' placeholder='Descrição' onChange={onChange('description')} value={state.description} />\n\n        <button type='button' disabled={state.submitDisabled} onClick={handleOpenConfirmationDialog}>\n          {state.submitDisabled ? <ClipLoader color='#FFF' size={11} /> : 'Criar Motivo'}\n        </button>\n      </S.Form>\n    </Modal>\n  );\n};\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Modal/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/data.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ModalNewProduct/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ProductStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/Filters/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/types/permissions.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/ContractStatus/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/index.tsx",["570","571","572"],"import React, { useEffect, useRef, useState } from 'react';\n\nimport { Filter, Product, RequestPagination, Sort, useListProductsAPI } from 'hooks/api/products/list-products-api';\n\nimport SelectInput from 'components/SelectInput';\n\nimport { CONTRACT_STATUS } from './data';\n\nimport { Contract } from 'hooks/api/products/list-contracts-api';\nimport { SelectType } from 'components/SelectInput/types';\n\nimport VMasker from 'vanilla-masker';\nimport DatePicker from 'components/DatePicker';\n\nimport { onlyNumbers } from 'utils/format-functions';\n\nimport * as S from './styles';\nimport Modal from 'components/Modal';\nimport { Dialog } from 'components/Dialog';\n\ntype FilterKeys = 'customerAccount' | keyof Contract | keyof Product | 'status' | 'service' | 'product' | 'from' | 'to';\ntype FilterProduct = Partial<Record<FilterKeys, string>>;\n\ninterface IProps {\n  onSubmit: (data: any) => void;\n  onRefresh: () => void;\n  loading: boolean;\n  onErrorInFetchProducts: (hasError: boolean) => void;\n}\n\nlet timeoutFilter: any;\n\nconst Filters: React.FC<IProps> = ({ onSubmit, loading, onRefresh, onErrorInFetchProducts }) => {\n  const [state, setState] = React.useState<FilterProduct>({});\n\n  const [filterFieldName, setFilterFieldName] = useState<string>('status');\n\n  const [disableFilterButton, setDisableFilterButton] = React.useState<boolean>(true);\n  const inputTextRef: any = useRef();\n\n  const perPage = 30;\n  const [page, setPage] = useState<number>(1);\n  const [sort, setSort] = useState<Sort>({ field: 'createdAt', asc: false });\n  const [filters, setFilters] = useState<Filter>({});\n  const [availableProducts, setAvailableProducts] = useState<SelectType[]>([]);\n\n  const [showLisProductsErrorModal, setShowListProductsErrorModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    clearTimeout(timeoutFilter);\n\n    // It's not necessary to call onSubmit, since it is already called on handleOnClean\n    if (Object.keys(state).length === 0) {\n      return;\n    }\n\n    if (filterFieldName === 'from' || filterFieldName === 'to') {\n      timeoutFilter = setTimeout(() => {\n        onSubmit({\n          ...state,\n          from: state.from,\n          to: state.to,\n        });\n      }, 500);\n    }\n\n    if (filterFieldName === 'userDocument') {\n      const doc: string = onlyNumbers(state.userDocument || '');\n      if (doc.length >= 3) {\n        timeoutFilter = setTimeout(() => {\n          onSubmit({\n            ...state,\n            userDocument: doc,\n          });\n        }, 500);\n      }\n    }\n\n    if (filterFieldName === 'status') {\n      timeoutFilter = setTimeout(() => {\n        onSubmit({\n          ...state,\n          status: state.status,\n        });\n      }, 500);\n    }\n\n    if (filterFieldName === 'product') {\n      timeoutFilter = setTimeout(() => {\n        onSubmit({\n          ...state,\n          product: state.product,\n        });\n      }, 500);\n    }\n  }, [state, filterFieldName]);\n\n  const genericHandleOnChange = (field: string) => (value: string) => {\n    setState({ ...state, [field]: value });\n\n    setFilterFieldName(field);\n  };\n\n  const pagination: RequestPagination = {\n    Page: page,\n    perPage,\n    sortField: sort.field,\n    sortDirection: sort.asc ? 'ASC' : 'DESC',\n  };\n\n  const listProducts = useListProductsAPI();\n\n  const fetchProdutos = async () => {\n    try {\n      const response = await listProducts(pagination, filters);\n\n      const availableProductsToRender: SelectType[] = [];\n\n      response.data.forEach((item: Product) => {\n        availableProductsToRender.push({ label: item.name, value: item.name });\n      });\n\n      setAvailableProducts(availableProductsToRender);\n\n      if (onErrorInFetchProducts) {\n        onErrorInFetchProducts(false);\n      }\n    } catch (error) {\n      setAvailableProducts([]);\n\n      if (onErrorInFetchProducts) {\n        onErrorInFetchProducts(true);\n      }\n\n      setShowListProductsErrorModal(true);\n    }\n  };\n\n  useEffect(() => {\n    fetchProdutos();\n  }, []);\n\n  const onSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const userDocument = VMasker.toPattern(e.target.value.trim(), '999.999.999-99');\n\n    setState({ ...state, userDocument });\n    setFilterFieldName('userDocument');\n\n    if (userDocument.length >= 3) {\n      setDisableFilterButton(false);\n    } else {\n      setDisableFilterButton(true);\n    }\n  };\n\n  const handleOnClean = () => {\n    setState({});\n    onSubmit({});\n\n    if (inputTextRef.current) {\n      setDisableFilterButton(true);\n      inputTextRef.current.focus();\n    }\n  };\n\n  const handleDialogOnClose = () => {\n    setShowListProductsErrorModal(false);\n  };\n\n  return (\n    <>\n      <S.Container loading={loading ? 1 : 0}>\n        <S.Column>\n          <S.SearchInputContainer>\n            <S.SearchInput\n              type='text'\n              ref={inputTextRef}\n              placeholder='Pesquisar por CPF'\n              value={state.userDocument || ''}\n              onChange={onSearchInputChange}\n            />\n\n            <S.Action disabled={disableFilterButton} onClick={onRefresh}>\n              Filtrar\n            </S.Action>\n\n            <S.Action onClick={handleOnClean}>Limpar</S.Action>\n          </S.SearchInputContainer>\n\n          <S.MaxWidth>\n            <S.FieldsContainer>\n              <S.Field>\n                <DatePicker label='A partir de' value={state.from} onChange={genericHandleOnChange('from')} />\n              </S.Field>\n              <S.Field>\n                <DatePicker label='Até' value={state.to} onChange={genericHandleOnChange('to')} />\n              </S.Field>\n              <S.Field>\n                <SelectInput label='Status' data={CONTRACT_STATUS} value={state.status} onChange={genericHandleOnChange('status')} />\n              </S.Field>\n\n              <S.Field>\n                <SelectInput label='Produto' data={availableProducts} value={state.product} onChange={genericHandleOnChange('product')} />\n              </S.Field>\n            </S.FieldsContainer>\n          </S.MaxWidth>\n        </S.Column>\n      </S.Container>\n\n      <Modal show={showLisProductsErrorModal} handleClose={handleDialogOnClose} level={0}>\n        <Dialog\n          isVisible={showLisProductsErrorModal}\n          title='Atenção'\n          message='Ocorreu um erro ao tentar listar os produtos, tente novamente ou entre em contato com o suporte.'\n          onClose={handleDialogOnClose}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default Filters;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Dialog/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/RequestDetails/Item/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/ClearSaleStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/UnicoStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Pagination/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Liquidations/LiquidationStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DatePicker/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/AccountStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/IdwallStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Requests/Filters/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/CancelledAccounts/Filters/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/reasons/post reasons.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Reasons/ModalNewReason/styled.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/data.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Title/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Item/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/SelectInput/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableItem/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableHeader/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/ContractStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Clients/Filters/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/Filters/styles.tsx",["573"],"import { Button as BaseButton } from '@tpinho/lib-react';\nimport styled, { css } from 'styled-components';\n\nexport const Container = styled.div<{ loading: 1 | 0 }>`\n  width: 100%;\n  height: max-content;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin: 16px 0;\n  filter: blur(${({ loading }) => (loading ? '2px' : '0px')});\n  pointer-events: ${({ loading }) => (loading ? 'none' : 'all')};\n`;\n\nexport const FieldsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: flex-end;\n\n  & > * {\n    margin: 4px 0px;\n  }\n`;\n\nexport const Field = styled.div`\n  margin-left: 16px;\n`;\n\nexport const SearchInputContainer = styled.div`\n  width: 100%;\n  align-self: center;\n  align-items: center;\n  justify-content: flex-end;\n  margin-bottom: 8px;\n  background: unset;\n\n  gap: 16px;\n`;\n\nexport const SearchInput = styled.input`\n  all: unset;\n\n  background: #fff;\n  border-radius: 10px;\n  width: 500px;\n  height: 100%;\n  margin-left: 10px;\n  height: 40px;\n  padding: 0 20px;\n  margin: 10px 0;\n`;\n\ntype ButtonProps = {\n  disabled?: boolean;\n};\n\nexport const Action = styled.button<ButtonProps>`\n  &:focus {\n    outline: none;\n  }\n  color: #fff;\n  padding: 8px;\n  width: max-content;\n  min-width: 100px;\n  border-radius: 10px;\n  border: none;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          background: gray;\n          cursor: not-allowed;\n        `\n      : css`\n          background: #05123f;\n          cursor: pointer;\n        `}\n`;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ProductStatus/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Products/ModalNewProduct/styled.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Item/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/SelectInput/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/Layout/Navbar/Title/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableHeader/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/DataTable/TableItem/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/remove-document-from-whitelist.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/batch-document-insert.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/insert-document-in-whitelist.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/document-whitelist/list-document-whitelist.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/Filters/index.tsx",["574"],"import DatePicker from 'components/DatePicker';\nimport { Filter } from 'hooks/api/document-whitelist/list-document-whitelist';\nimport React, { useEffect } from 'react';\nimport VMasker from 'vanilla-masker';\nimport * as S from './styles';\nimport SelectInput from 'components/SelectInput';\n\ninterface IProps {\n  onSubmit: (data: any) => void;\n  onRefresh: () => void;\n  loading: boolean;\n}\n\nconst Filters: React.FC<IProps> = ({ onSubmit, loading, onRefresh }) => {\n  const [state, setState] = React.useState<Filter>({});\n\n  // Hold calling on submit for 500ms after internal state change\n  useEffect(() => {\n    // It's not necessary to call onSubmit, since it is already called on handleOnClean\n    if (Object.keys(state).length === 0) {\n      return () => {\n        // NOOP\n      };\n    }\n\n    const timeout = setTimeout(() => {\n      onSubmit({ ...state, cpf: state.cpf?.replace(/\\D/g, '') });\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [state]);\n\n  const genericHandleOnChange = (field: string) => (value: string) => {\n    setState({ ...state, [field]: value });\n  };\n\n  const onSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const cpf = VMasker.toPattern(e.target.value.trim(), '999.999.999-99');\n\n    setState({ ...state, cpf });\n  };\n\n  const handleOnClean = () => {\n    setState({});\n    onSubmit({});\n  };\n\n  return (\n    <S.Container loading={loading ? 1 : 0}>\n      <S.Filters>\n        <S.ContainerSelect>\n          <SelectInput\n            all\n            value=''\n            label='Parceiro'\n            data={[\n              { value: 'Digimais', label: 'Digimais' },\n              { value: 'Parceiro', label: 'Parceiro' },\n            ]}\n            onChange={(value) => {\n              console.log(value);\n            }}\n          />\n        </S.ContainerSelect>\n        <S.SearchInput placeholder='Procurar por CPF' value={state.cpf || ''} onChange={onSearchInputChange} />\n      </S.Filters>\n      <S.Field>\n        <DatePicker label='A partir de' value={state.from} onChange={genericHandleOnChange('from')} />\n      </S.Field>\n      <S.Field>\n        <DatePicker label='Até' value={state.to} onChange={genericHandleOnChange('to')} />\n      </S.Field>\n\n      <S.Field>\n        <S.Button onClick={onRefresh}>Atualizar</S.Button>\n        <S.Button onClick={handleOnClean}>Limpar</S.Button>\n      </S.Field>\n    </S.Container>\n  );\n};\n\nexport default Filters;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/TextInput/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Whitelist/Filters/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/components/TextInput/styles.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/Filters/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/Filters/styles.tsx",["575"],"import { Button as BaseButton } from '@tpinho/lib-react';\nimport styled, { css } from 'styled-components';\n\nexport const Container = styled.div<{ loading: 1 | 0 }>`\n  width: 100%;\n  height: max-content;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: flex-end;\n  filter: blur(${({ loading }) => (loading ? '2px' : '0px')});\n  pointer-events: ${({ loading }) => (loading ? 'none' : 'all')};\n`;\n\nexport const FieldsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: flex-end;\n\n  & > * {\n    margin: 4px 0px;\n  }\n`;\n\nexport const Field = styled.div`\n  margin-left: 16px;\n`;\n\nexport const SearchInputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-start;\n  margin-left: 20px;\n\n  gap: 16px;\n`;\n\nexport const SearchInput = styled.input`\n  all: unset;\n\n  background: #fff;\n  border-radius: 5px;\n  width: 100%;\n  height: 40px;\n  padding: 0 20px;\n`;\n\ntype ButtonProps = {\n  disabled?: boolean;\n};\n\nexport const Action = styled.button<ButtonProps>`\n  &:focus {\n    outline: none;\n  }\n  color: #fff;\n  padding: 8px;\n  width: max-content;\n  min-width: 100px;\n  border-radius: 5px;\n  border: none;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          background: gray;\n          cursor: not-allowed;\n        `\n      : css`\n          background: #05123f;\n          cursor: pointer;\n        `}\n`;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/list-plans-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/insert-plan-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/FormPlan/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Plan/FormPlan/styles.ts",["576","577","578","579"],"import styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button as BaseButton } from '@tpinho/lib-react';\n\ntype ButtonProps = {\n  twoButtons?: boolean;\n  disabled?: boolean;\n  color?: string;\n};\n\nexport const Container = styled.div`\n  flex-direction: column;\n  padding: 30px;\n  width: 100%;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n`;\n\nexport const FormView = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form<{ error?: 0 | 1 }>`\n  p {\n    color: ${(props) => (props.error ? props.theme.palette.red.main : '#05123f')};\n    text-align: center;\n  }\n\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-around;\n\n  label {\n    margin: 0;\n    padding: 0;\n    padding-bottom: 4px;\n    font-size: 14px;\n    font-weight: bold;\n  }\n\n  input[type='text'],\n  select {\n    border: 1px solid #ccc;\n    padding: 10px;\n    width: 100%;\n  }\n\n  button {\n    background: #1c1c77;\n    border: none;\n    color: #fff;\n    padding: 10px;\n    border-radius: 10px;\n    margin: 15px 0;\n    margin-bottom: 20px;\n    cursor: pointer;\n    font-weight: bold;\n    font-size: 16px;\n\n    :hover {\n      transition: opacity 0.3s linear;\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  margin-bottom: 20px;\n\n  input[type='text'] {\n    width: 200px;\n    margin: 0 10px;\n  }\n`;\n\nexport const Options = styled.div`\n  flex: 1;\n  display: inline-block;\n  margin-left: 30px;\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const FieldOptions = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  margin-bottom: 20px;\n\n  span {\n    width: 100%;\n  }\n\n  input {\n    border: 1px solid #ccc;\n    padding: 10px;\n    width: 100%;\n    margin: 0 5px;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport const FieldOptionsCheckbox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 20px;\n\n  label {\n    margin-right: 5px;\n  }\n`;\n\nexport const Center = styled.div`\n  flex: 1;\n  justify-content: center;\n  margin-top: 20px;\n  width: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const LoaderDescription = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  padding-top: 16px;\n`;\n\nexport const ContainerButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ButtonPrimary = styled.button`\n  width: 300px;\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n\n  background-color: #ccc !important;\n  color: #000 !important;\n`;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/get-plan-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/styles.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/Filters/index.tsx",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/Filters/styles.tsx",["580"],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/list-partners-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/remove-partner.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/FormPartner/index.tsx",["581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604"],"import React, { ReactElement, useState, FormEvent, ChangeEvent, useEffect } from 'react';\nimport { hooks } from '@tpinho/lib-react/dist';\nimport * as S from './styles';\nimport { Partner } from 'types/partners';\nimport { Plan } from 'types/plans';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nimport { useInsertPartnerAPI } from 'hooks/api/partners/insert-partner-api';\nimport { useListPlansApi } from 'hooks/api/plans/list-plans-api';\nimport { useGetPartnerApi } from 'hooks/api/partners/get-partner-api';\nimport { useEditPartnerAPI } from 'hooks/api/partners/edit-partner-api';\n\nimport { faArrowDown, faArrowUp, faCopy, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nfunction FormPartner(): ReactElement {\n  const [errorMessage, setErrorMessage] = hooks.useState('Algo deu errado. Suas informações estão corretas?');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [plans, setPlans] = useState<Plan[]>([]);\n  const [state, setState] = hooks.useState<Partner>({\n    id: '',\n    name: '',\n    description: '',\n    accountType: '',\n    firebaseSufix: '',\n    onboardingWebhook: '',\n    accountStatusWebhook: '',\n    planId: '',\n    apiKey: '',\n    error: null,\n    submitDisabled: null,\n    readonly: true,\n  });\n  const [inputTypeApiKey, setInputTypeApiKey] = useState<string>('password');\n  const [title, setTitle] = useState<string>('');\n  const [apiKeyCopied, setApiKeyCopied] = useState<boolean>(false);\n  const [viewRules, setViewRules] = useState<boolean>(false);\n\n  const history = useHistory();\n  const { id, mode } = useParams<{ id: string; mode: string }>();\n\n  const insertPartner = useInsertPartnerAPI();\n  const editPartner = useEditPartnerAPI(id);\n  const listPlans = useListPlansApi();\n  const getPartner = useGetPartnerApi(id);\n\n  const getPartnerApi = async () => {\n    setLoading(true);\n    const partnerAPI: Partner = await getPartner();\n    setState((prevState: Partner) => {\n      return {\n        ...prevState,\n        id: partnerAPI.id || '',\n        name: partnerAPI.name || '',\n        description: partnerAPI.description || '',\n        accountType: partnerAPI.accountType || '',\n        firebaseSufix: partnerAPI.firebaseSufix || '',\n        onboardingWebhook: partnerAPI.onboardingWebhook || '',\n        accountStatusWebhook: partnerAPI.accountStatusWebhook || '',\n        planId: partnerAPI.planId || '',\n        apiKey: partnerAPI.apiKey || '',\n      };\n    });\n    setLoading(false);\n  };\n\n  const onChange = (field: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    setState({ [field]: event.target?.value });\n  };\n\n  const onChangeSelect = (planId: string) => {\n    setState((prevState: Partner) => {\n      return { ...prevState, planId };\n    });\n  };\n\n  const fetchPlans = async () => {\n    try {\n      setLoading(true);\n      const response = await listPlans();\n      setPlans(response.items);\n      const planFirst = response.items[0];\n      setState((prevState: Partner) => {\n        return { ...prevState, planId: planFirst.id };\n      });\n    } catch (error) {\n      setPlans([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBack = () => {\n    history.push('/partners');\n  };\n\n  useEffect(() => {\n    fetchPlans();\n    if (id) {\n      getPartnerApi()\n        .then(() => {\n          if (mode === 'view') {\n            setTitle('Detalhes do parceiro');\n            setState((prevState: Partner) => {\n              return {\n                ...prevState,\n                readonly: true,\n              };\n            });\n          } else {\n            setTitle('Editar parceiro');\n            setState((prevState: Partner) => {\n              return {\n                ...prevState,\n                readonly: false,\n              };\n            });\n          }\n        })\n        .catch(() => {\n          handleBack();\n        });\n    } else {\n      setTitle('Novo parceiro');\n      setState((prevState: Partner) => {\n        return {\n          ...prevState,\n          readonly: false,\n        };\n      });\n    }\n  }, []);\n\n  const handleOnSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      !state.name ||\n      !state.description ||\n      !state.accountType ||\n      !state.firebaseSufix ||\n      !state.onboardingWebhook ||\n      !state.accountStatusWebhook ||\n      !state.planId\n    ) {\n      setErrorMessage('Todos os campos são obrigatórios.');\n      setState({ error: true });\n\n      return;\n    }\n\n    try {\n      setState({ submitDisabled: true });\n\n      if (mode !== 'edit') {\n        const partnerAPI = await insertPartner(state);\n\n        setState((prevState: Partner) => {\n          return { ...prevState, apiKey: partnerAPI.data.apiKey };\n        });\n        history.push(`/partner/view/${partnerAPI.data.id}`);\n      } else {\n        await editPartner(state);\n        handleBack();\n      }\n    } catch (e) {\n      setErrorMessage('Algo deu errado. Suas informações estão corretas?');\n      setState({ error: true, submitDisabled: false });\n    } finally {\n      setState({ submitDisabled: false });\n    }\n  };\n\n  const handleCopyApiKey = () => {\n    const content = document.getElementById('apiKey') as HTMLInputElement;\n    content.select();\n\n    if (content.type !== 'text') {\n      content.type = 'text';\n      document.execCommand('copy', true, content.value);\n      content.type = 'password';\n    } else {\n      document.execCommand('copy', true, content.value);\n    }\n    content.selectionStart = content.selectionEnd;\n    setApiKeyCopied(true);\n    setTimeout(() => {\n      setApiKeyCopied(false);\n    }, 3000);\n  };\n\n  const handleViewApiKey = () => {\n    if (inputTypeApiKey === 'password') {\n      setInputTypeApiKey('text');\n    } else {\n      setInputTypeApiKey('password');\n    }\n  };\n\n  const handleViewRules = () => {\n    setViewRules(!viewRules);\n  };\n\n  if (loading) {\n    return (\n      <>\n        <S.Center>\n          <ClipLoader color='#555' size={36} />\n\n          <S.LoaderDescription>Carregando...</S.LoaderDescription>\n        </S.Center>\n      </>\n    );\n  }\n  return (\n    <>\n      <S.Container>\n        <S.Title>{title}</S.Title>\n        <S.FormView>\n          <S.Form onSubmit={handleOnSubmit} error={state.error ? 1 : 0}>\n            <S.Field>\n              <label htmlFor='name'>Nome *</label>\n              <input\n                type='text'\n                name='name'\n                placeholder='Nome do parceiro'\n                onChange={onChange('name')}\n                disabled={state.submitDisabled}\n                value={state.name}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='description'>Descrição *</label>\n              <input\n                type='text'\n                name='description'\n                placeholder='Descrição do parceiro'\n                onChange={onChange('description')}\n                disabled={state.submitDisabled}\n                value={state.description}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='accountType'>Tipo da Conta *</label>\n              <input\n                type='text'\n                name='description'\n                placeholder='Tipo da Conta'\n                onChange={onChange('accountType')}\n                disabled={state.submitDisabled}\n                value={state.accountType}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='firebaseSufix'>Tag do Firebase *</label>\n              <input\n                type='text'\n                name='firebaseSufix'\n                placeholder='Tag do Firebase'\n                onChange={onChange('firebaseSufix')}\n                disabled={state.submitDisabled}\n                value={state.firebaseSufix}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='onboardingWebhook'>Onboarding Webhook *</label>\n              <input\n                type='text'\n                name='onboardingWebhook'\n                placeholder='Onboarding Webhook'\n                onChange={onChange('onboardingWebhook')}\n                disabled={state.submitDisabled}\n                value={state.onboardingWebhook}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='accountStatusWebhook'>Account Status Webhook *</label>\n              <input\n                type='text'\n                name='accountStatusWebhook'\n                placeholder='Account Status Webhook'\n                onChange={onChange('accountStatusWebhook')}\n                disabled={state.submitDisabled}\n                value={state.accountStatusWebhook}\n                readOnly={state.readonly}\n              />\n            </S.Field>\n            <S.Field>\n              <label htmlFor='plan'>Plano *</label>\n\n              <select\n                disabled={state.submitDisabled || state.readonly}\n                name='select'\n                onChange={(event) => {\n                  onChangeSelect(event.target.value);\n                }}\n                value={state.planId}\n              >\n                {plans.map((plan) => (\n                  <option value={plan.id}>{plan.name}</option>\n                ))}\n              </select>\n            </S.Field>\n            {state.apiKey !== '' && (\n              <S.Field>\n                <S.Column>\n                  <label htmlFor='apiKey'>API Key</label>\n                  {apiKeyCopied && <span>API Key copiada</span>}\n                </S.Column>\n                <S.APIKey>\n                  <input\n                    type={inputTypeApiKey}\n                    id='apiKey'\n                    className='apiKey'\n                    name='apiKey'\n                    disabled={state.submitDisabled}\n                    readOnly\n                    value={state.apiKey}\n                    onChange={onChange('apiKey')}\n                  />\n                  <S.Icon icon={faCopy} type='button' onClick={handleCopyApiKey} />\n                  {inputTypeApiKey === 'password' ? (\n                    <S.Icon icon={faEye} type='button' onClick={handleViewApiKey} />\n                  ) : (\n                    <S.Icon icon={faEyeSlash} type='button' onClick={handleViewApiKey} />\n                  )}\n                </S.APIKey>\n              </S.Field>\n            )}\n            <S.ButtonRules type='button' onClick={handleViewRules}>\n              Gerenciar regras <S.Icon icon={viewRules ? faArrowUp : faArrowDown} />\n            </S.ButtonRules>\n            {viewRules && (\n              <S.ContainerRules>\n                <label>Conta</label>\n                <S.RowRules>\n                  <label htmlFor='onboarding-pj'>Onboarding PJ</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='onboarding-pj'\n                    name='onboarding-pj'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n\n                  <label htmlFor='onboarding-pf'>Onboarding PF</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='onboarding-pf'\n                    name='onboarding-pf'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n\n                <label>Depósito</label>\n                <S.RowRules>\n                  <label htmlFor='billet'>Boleto</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='billet'\n                    name='billet'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='pix'>PIX</label>\n                  <input readOnly={state.readonly} type='checkbox' id='pix' name='pix' onChange={() => console.log('oi')} checked={false} />\n                </S.RowRules>\n\n                <label>Transferências</label>\n                <S.RowRules>\n                  <label htmlFor='pix'>PIX</label>\n                  <input readOnly={state.readonly} type='checkbox' id='pix' name='pix' onChange={() => console.log('oi')} checked={false} />\n                  <label htmlFor='ted-doc'>TED e DOC</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='ted-doc'\n                    name='ted-doc'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n\n                  <label htmlFor='p2p'>P2P</label>\n                  <input readOnly={state.readonly} type='checkbox' id='p2p' name='p2p' onChange={() => console.log('oi')} checked={false} />\n                  <label htmlFor='schedule'>Agendado</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='schedule'\n                    name='schedule'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n\n                <label>Pagamentos</label>\n                <S.RowRules>\n                  <label htmlFor='billet'>Boleto</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='billet-payments'\n                    name='billet-payments'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='pix'>PIX</label>\n                  <input readOnly={state.readonly} type='checkbox' id='pix' name='pix' onChange={() => console.log('oi')} checked={false} />\n                </S.RowRules>\n\n                <label>Limites</label>\n                <S.RowRules>\n                  <label htmlFor='billet'>Boleto</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='billet-payments'\n                    name='billet-payments'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='pix'>PIX</label>\n                  <input readOnly={state.readonly} type='checkbox' id='pix' name='pix' onChange={() => console.log('oi')} checked={false} />\n                  <label htmlFor='ted-doc'>TED e DOC</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='ted-doc'\n                    name='ted-doc'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n\n                  <label htmlFor='p2p'>P2P</label>\n                  <input readOnly={state.readonly} type='checkbox' id='p2p' name='p2p' onChange={() => console.log('oi')} checked={false} />\n                  <label htmlFor='cards'>Cartões</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='cards'\n                    name='cards'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n\n                <label>Cartão de crédito</label>\n                <S.RowRules>\n                  <label htmlFor='virtual-card'>Cartão virtual</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='virtual-card'\n                    name='virtual-card'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='physical-card'>Cartão físico</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='physical-card'\n                    name='physical-card'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='digital-invoice'>Fatura digital</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='digital-invoice'\n                    name='digital-invoice'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n\n                <label>Cartão de débito</label>\n                <S.RowRules>\n                  <label htmlFor='virtual-card'>Cartão virtual</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='virtual-card'\n                    name='virtual-card'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='physical-card'>Cartão físico</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='physical-card'\n                    name='physical-card'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n\n                <label>Outros</label>\n                <S.RowRules>\n                  <label htmlFor='balance'>Saldo</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='balance'\n                    name='balance'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='statement'>Declaração</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='statement'\n                    name='statement'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n\n                  <label htmlFor='p2p'>Recibo</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='receipt'\n                    name='receipt'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                  <label htmlFor='recharge'>Recarga</label>\n                  <input\n                    readOnly={state.readonly}\n                    type='checkbox'\n                    id='recharge'\n                    name='recharge'\n                    onChange={() => console.log('oi')}\n                    checked={false}\n                  />\n                </S.RowRules>\n              </S.ContainerRules>\n            )}\n            {state.error ? <p>{errorMessage}</p> : ''}\n            {(!state.readonly && state.apiKey === '') || mode === 'edit' ? (\n              <S.ContainerButtons>\n                <S.ButtonCancel type='button' onClick={handleBack}>\n                  Cancelar\n                </S.ButtonCancel>\n\n                <S.ButtonPrimary type='submit' disabled={state.submitDisabled || (state.apiKey !== '' && mode !== 'edit')}>\n                  Salvar\n                </S.ButtonPrimary>\n              </S.ContainerButtons>\n            ) : (\n              <button type='button' onClick={handleBack}>\n                Ver todos os parceiros\n              </button>\n            )}\n          </S.Form>\n        </S.FormView>\n      </S.Container>\n    </>\n  );\n}\n\nexport default FormPartner;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/pages/Partners/FormPartner/styles.ts",["605"],"import styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport const Container = styled.div`\n  flex-direction: column;\n  padding: 30px;\n  width: 100%;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n`;\n\nexport const FormView = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form<{ error?: 0 | 1 }>`\n  p {\n    color: ${(props) => (props.error ? props.theme.palette.red.main : '#05123f')};\n    text-align: center;\n  }\n\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-around;\n\n  label {\n    margin: 0;\n    padding: 0;\n    padding-bottom: 4px;\n    font-size: 14px;\n    font-weight: bold;\n  }\n\n  input[type='text'],\n  input[type='password'],\n  select {\n    border: 1px solid #ccc;\n    padding: 10px;\n    width: 100%;\n    background-color: #ffffff;\n  }\n\n  button {\n    background: #1c1c77;\n    border: none;\n    color: #fff;\n    padding: 10px;\n    border-radius: 5px;\n    margin: 15px 0;\n    margin-bottom: 20px;\n    cursor: pointer;\n    font-weight: bold;\n    font-size: 16px;\n\n    :hover {\n      transition: opacity 0.3s linear;\n      opacity: 0.8;\n    }\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  margin-bottom: 20px;\n\n  input[type='text'] {\n    width: 200px;\n    margin: 0 10px;\n  }\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport const Options = styled.div`\n  flex: 1;\n  display: inline-block;\n  margin-left: 30px;\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nexport const FieldOptions = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  margin-bottom: 20px;\n\n  span {\n    width: 100%;\n  }\n\n  input {\n    border: 1px solid #ccc;\n    padding: 10px;\n    width: 100%;\n    margin: 0 5px;\n  }\n\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport const FieldOptionsCheckbox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 20px;\n\n  label {\n    margin-right: 5px;\n  }\n`;\n\nexport const Center = styled.div`\n  flex: 1;\n  justify-content: center;\n  margin-top: 20px;\n  width: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const LoaderDescription = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  padding-top: 16px;\n`;\n\nexport const ContainerButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ButtonPrimary = styled.button`\n  width: 300px;\n`;\n\nexport const ButtonCancel = styled.button`\n  width: 300px;\n\n  background-color: #ccc !important;\n  color: #000 !important;\n`;\n\nexport const ButtonRules = styled.button`\n  width: 200px;\n  border-radius: 0 !important;\n  background-color: #e0e0e0 !important;\n  color: #000 !important;\n  font-weight: normal !important;\n`;\nexport const APIKey = styled.div`\n  display: flex;\n  height: 40px;\n  width: 100%;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const Icon = styled(FontAwesomeIcon)`\n  background-color: transparent !important;\n  margin-left: 10px;\n  font-size: 16px;\n  color: #333 !important;\n  cursor: pointer;\n`;\n\nexport const ContainerRules = styled.div`\n  width: 100%;\n  padding: 0px 10px 10px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n\n  label {\n    margin-top: 10px;\n    font-size: 15px;\n    color: #04133e;\n  }\n`;\n\nexport const RowRules = styled.div`\n  justify-content: flex-start;\n  align-items: center;\n\n  label {\n    font-size: 14px;\n    margin-top: 0;\n    margin-right: 5px;\n    margin-left: 20px;\n    color: #000;\n  }\n`;\n","/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/insert-partner-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/get-partner-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/partners/edit-partner-api.ts",[],"/home/dawan/Documentos/RubCube/Dev/intranet-onboarding/src/hooks/api/plans/remove-plan.ts",[],{"ruleId":"606","replacedBy":"607"},{"ruleId":"608","replacedBy":"609"},{"ruleId":"610","replacedBy":"611"},{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","severity":1,"message":"617","line":175,"column":18,"nodeType":"618","messageId":"619","endLine":175,"endColumn":21},{"ruleId":"616","severity":1,"message":"620","line":19,"column":10,"nodeType":"618","messageId":"619","endLine":19,"endColumn":17},{"ruleId":"616","severity":1,"message":"617","line":212,"column":18,"nodeType":"618","messageId":"619","endLine":212,"endColumn":21},{"ruleId":"621","severity":1,"message":"622","line":80,"column":7,"nodeType":"623","messageId":"624","endLine":80,"endColumn":57},{"ruleId":"621","severity":1,"message":"622","line":90,"column":7,"nodeType":"623","messageId":"624","endLine":90,"endColumn":46},{"ruleId":"616","severity":1,"message":"625","line":1,"column":18,"nodeType":"618","messageId":"619","endLine":1,"endColumn":21},{"ruleId":"616","severity":1,"message":"626","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":15},{"ruleId":"627","severity":1,"message":"628","line":49,"column":5,"nodeType":"629","messageId":"624","endLine":49,"endColumn":16},{"ruleId":"627","severity":1,"message":"628","line":46,"column":7,"nodeType":"629","messageId":"624","endLine":46,"endColumn":18},{"ruleId":"616","severity":1,"message":"630","line":42,"column":16,"nodeType":"618","messageId":"619","endLine":42,"endColumn":23},{"ruleId":"616","severity":1,"message":"631","line":43,"column":16,"nodeType":"618","messageId":"619","endLine":43,"endColumn":23},{"ruleId":"616","severity":1,"message":"632","line":44,"column":19,"nodeType":"618","messageId":"619","endLine":44,"endColumn":29},{"ruleId":"616","severity":1,"message":"633","line":1,"column":20,"nodeType":"618","messageId":"619","endLine":1,"endColumn":30},{"ruleId":"627","severity":1,"message":"628","line":63,"column":15,"nodeType":"629","messageId":"624","endLine":63,"endColumn":26},{"ruleId":"616","severity":1,"message":"633","line":1,"column":20,"nodeType":"618","messageId":"619","endLine":1,"endColumn":30},{"ruleId":"616","severity":1,"message":"625","line":1,"column":18,"nodeType":"618","messageId":"619","endLine":1,"endColumn":21},{"ruleId":"616","severity":1,"message":"634","line":2,"column":10,"nodeType":"618","messageId":"619","endLine":2,"endColumn":25},{"ruleId":"616","severity":1,"message":"633","line":3,"column":20,"nodeType":"618","messageId":"619","endLine":3,"endColumn":30},{"ruleId":"616","severity":1,"message":"635","line":5,"column":6,"nodeType":"618","messageId":"619","endLine":5,"endColumn":17},{"ruleId":"616","severity":1,"message":"633","line":1,"column":20,"nodeType":"618","messageId":"619","endLine":1,"endColumn":30},{"ruleId":"627","severity":1,"message":"628","line":347,"column":37,"nodeType":"629","messageId":"624","endLine":347,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":357,"column":37,"nodeType":"629","messageId":"624","endLine":357,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":370,"column":37,"nodeType":"629","messageId":"624","endLine":370,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":374,"column":104,"nodeType":"629","messageId":"624","endLine":374,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":380,"column":104,"nodeType":"629","messageId":"624","endLine":380,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":387,"column":37,"nodeType":"629","messageId":"624","endLine":387,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":392,"column":104,"nodeType":"629","messageId":"624","endLine":392,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":399,"column":37,"nodeType":"629","messageId":"624","endLine":399,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":412,"column":37,"nodeType":"629","messageId":"624","endLine":412,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":416,"column":104,"nodeType":"629","messageId":"624","endLine":416,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":427,"column":37,"nodeType":"629","messageId":"624","endLine":427,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":431,"column":104,"nodeType":"629","messageId":"624","endLine":431,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":438,"column":37,"nodeType":"629","messageId":"624","endLine":438,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":443,"column":104,"nodeType":"629","messageId":"624","endLine":443,"endColumn":115},{"ruleId":"627","severity":1,"message":"628","line":450,"column":37,"nodeType":"629","messageId":"624","endLine":450,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":463,"column":37,"nodeType":"629","messageId":"624","endLine":463,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":472,"column":37,"nodeType":"629","messageId":"624","endLine":472,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":481,"column":37,"nodeType":"629","messageId":"624","endLine":481,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":494,"column":37,"nodeType":"629","messageId":"624","endLine":494,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":503,"column":37,"nodeType":"629","messageId":"624","endLine":503,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":516,"column":37,"nodeType":"629","messageId":"624","endLine":516,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":525,"column":37,"nodeType":"629","messageId":"624","endLine":525,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":535,"column":37,"nodeType":"629","messageId":"624","endLine":535,"endColumn":48},{"ruleId":"627","severity":1,"message":"628","line":544,"column":37,"nodeType":"629","messageId":"624","endLine":544,"endColumn":48},{"ruleId":"616","severity":1,"message":"625","line":1,"column":18,"nodeType":"618","messageId":"619","endLine":1,"endColumn":21},"lines-around-directive",["636"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'row' is defined but never used.","Identifier","unusedVar","'Partner' is defined but never used.","no-alert","Unexpected alert.","CallExpression","unexpected","'css' is defined but never used.","'VMasker' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","'setPage' is assigned a value but never used.","'setSort' is assigned a value but never used.","'setFilters' is assigned a value but never used.","'BaseButton' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'ButtonProps' is defined but never used.","padding-line-between-statements"]